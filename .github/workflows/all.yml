name: "Test and package"

on:
  push:
    branches-ignore: [ windows-support ]
  pull_request:

jobs:
  test:
    name: "Test Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Patch cmark-gfm
        uses: ./.github/actions/cmark-gfm-patch

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip pytest
          python -m pip install -e .

      - name: Test with pytest
        run: pytest tests

      - name: Test installing from sdist
        run: |
          python setup.py sdist
          python -m venv /tmp/sdist-test
          /tmp/sdist-test/bin/pip install ./dist/*.tar.gz
          /tmp/sdist-test/bin/python -c 'import pycmarkgfm; print(pycmarkgfm.gfm_to_html("it *works*"))' | grep '<p>it <em>works</em></p>'

  check-typing:
    name: "Check typing with mypy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: python -m pip install mypy

      - name: Check types
        run: mypy pycmarkgfm/ tests/

  check-generated:
    name: "Check generated files are up-to-date"
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Generate files
        run: ./generated.sh

      - name: Check for diffs
        run: git diff --exit-code

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Patch cmark-gfm
        uses: ./.github/actions/cmark-gfm-patch

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.11'

      - name: Install build deps
        run: |
          python -m pip --disable-pip-version-check install cibuildwheel==2.10.0 twine==4.0.1

      - uses: docker/setup-qemu-action@v1
        if: runner.os == 'Linux'
        name: Set up QEMU

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
          twine check ./wheelhouse/*.whl

      - name: Build sdist
        if: runner.os == 'Linux'
        run: |
          python setup.py sdist
          twine check ./dist/*.tar.gz
