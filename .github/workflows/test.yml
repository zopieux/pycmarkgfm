name: "Test and package"

on:
  push:
  pull_request:

jobs:
  test:
    name: "Test Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Patch cmark-gfm
        uses: ./.github/actions/cmark-gfm-patch

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip pytest
          python -m pip install -e .

      - name: Test with pytest
        run: pytest tests

      - name: Test installing from sdist
        run: |
          python setup.py sdist
          python -m venv /tmp/sdist-test
          /tmp/sdist-test/bin/pip install ./dist/*.tar.gz
          /tmp/sdist-test/bin/python -c 'import pycmarkgfm; print(pycmarkgfm.gfm_to_html("it *works*"))' | grep '<p>it <em>works</em></p>'

  check-typing:
    name: "Check typing with mypy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: python -m pip install mypy

      - name: Check types
        run: mypy pycmarkgfm/ tests/

  check-generated:
    name: "Check generated files are up-to-date"
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Generate files
        run: ./generated.sh

      - name: Check for diffs
        run: git diff --exit-code

  package-wheel:
    name: "Build manylinux wheels"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Patch cmark-gfm
        uses: ./.github/actions/cmark-gfm-patch

      - name: Build manylinux wheels and test installing from them
        uses: docker://quay.io/pypa/manylinux_2_28_x86_64
        with:
          entrypoint: /bin/bash
          args: >
            -c "set -ex; cd /github/workspace && for py in 37 38 39 310 311; do /opt/python/cp${py}-cp*/bin/python setup.py bdist_wheel && auditwheel repair dist/*${py}*.whl && /opt/python/cp${py}-cp*/bin/python -m venv /tmp/test && /tmp/test/bin/pip install wheelhouse/*cp${py}*.whl && pushd /tmp && echo 'it *works*' | /tmp/test/bin/python -c 'import sys, pycmarkgfm; print(pycmarkgfm.gfm_to_html(sys.stdin.read()))' | grep '<p>it <em>works</em></p>'; popd; rm -rf /tmp/test; done"

      - uses: actions/upload-artifact@v2
        # On tags only.
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        with:
          path: wheelhouse/*manylinux*.whl
          if-no-files-found: error
